# true_annotation <- geom_vline(xintercept = true_dem_wins) +
#     annotate(
#       geom="text",
#       x = true_dem_wins,
#       y = 10,
#       angle = 90,
#       label = paste("True outcome =", true_dem_wins)
#     )
}
} else {
true_dem_wins <- numeric(0)
true_annotation <- identity
}
ggplot(pred_total, aes(x = n_dem_wins, fill = n_dem_wins < 101.5)) +
geom_histogram(binwidth = 1) +
geom_vline(xintercept = true_dem_wins) +
annotate(
geom="text",
x = true_dem_wins,
y = 10,
angle = 90,
label = paste("True outcome =", true_dem_wins)
) +
ggtitle(paste("Predicted Democratic seats in", holdout_year)) +
ylab("N Bootstrap Sims") +
theme_sixtysix() +
scale_fill_manual(
values = c(`TRUE`=strong_red, `FALSE` = strong_blue),
guide = FALSE
)
}
gg_pred_hist <- function(bs, true_line=TRUE){
holdout_year <- bs$holdout_year
print("bootstrapped predictions")
pred_total <- bs$sample %>%
group_by(sim) %>%
summarise(n_dem_wins = sum(pred_samp > 0.5)) %>%
group_by()
print(mean(pred_total$n_dem_wins))
print(pivotal_bs(pred_total$n_dem_wins, c(0.025, 0.2, 0.8, 0.975)))
if(true_line){
print("actual results")
true_dem_wins <- df[df$year == holdout_year,] %>% with(sum(sth_pctdem > 0.5))
print(true_dem_wins)
# true_annotation <- geom_vline(xintercept = true_dem_wins) +
#     annotate(
#       geom="text",
#       x = true_dem_wins,
#       y = 10,
#       angle = 90,
#       label = paste("True outcome =", true_dem_wins)
#     )
} else {
true_dem_wins <- numeric(0)
true_annotation <- identity
}
ggplot(pred_total, aes(x = n_dem_wins, fill = n_dem_wins < 101.5)) +
geom_histogram(binwidth = 1) +
geom_vline(xintercept = true_dem_wins) +
annotate(
geom="text",
x = true_dem_wins,
y = 10,
angle = 90,
label = paste("True outcome =", true_dem_wins)
) +
ggtitle(paste("Predicted Democratic seats in", holdout_year)) +
ylab("N Bootstrap Sims") +
theme_sixtysix() +
scale_fill_manual(
values = c(`TRUE`=strong_red, `FALSE` = strong_blue),
guide = FALSE
)
}
gg_pred_hist(bs)
gg_pred_hist(bs, true_line = FALSE)
gg_pred_hist <- function(bs, true_line=TRUE){
holdout_year <- bs$holdout_year
print("bootstrapped predictions")
pred_total <- bs$sample %>%
group_by(sim) %>%
summarise(n_dem_wins = sum(pred_samp > 0.5)) %>%
group_by()
print(mean(pred_total$n_dem_wins))
print(pivotal_bs(pred_total$n_dem_wins, c(0.025, 0.2, 0.8, 0.975)))
if(true_line){
print("actual results")
true_dem_wins <- df[df$year == holdout_year,] %>% with(sum(sth_pctdem > 0.5))
print(true_dem_wins)
gg_annotation <- annotate(
geom="text",
x = true_dem_wins,
y = 10,
angle = 90,
label = paste("True outcome =", true_dem_wins)
)
} else {
true_dem_wins <- numeric(0)
gg_annotation <- element_blank()
}
ggplot(pred_total, aes(x = n_dem_wins, fill = n_dem_wins < 101.5)) +
geom_histogram(binwidth = 1) +
geom_vline(xintercept = true_dem_wins) +
gg_annotation +
ggtitle(paste("Predicted Democratic seats in", holdout_year)) +
ylab("N Bootstrap Sims") +
theme_sixtysix() +
scale_fill_manual(
values = c(`TRUE`=strong_red, `FALSE` = strong_blue),
guide = FALSE
)
}
gg_pred_hist(bs, true_line = FALSE)
ggplot::`+`
methods("+")
?+.gg*
?ggplot2::`+`
?ggplot2::`%+%`
gg_pred_hist <- function(bs, true_line=TRUE){
holdout_year <- bs$holdout_year
print("bootstrapped predictions")
pred_total <- bs$sample %>%
group_by(sim) %>%
summarise(n_dem_wins = sum(pred_samp > 0.5)) %>%
group_by()
print(mean(pred_total$n_dem_wins))
print(pivotal_bs(pred_total$n_dem_wins, c(0.025, 0.2, 0.8, 0.975)))
if(true_line){
print("actual results")
true_dem_wins <- df[df$year == holdout_year,] %>% with(sum(sth_pctdem > 0.5))
print(true_dem_wins)
gg_annotation <- function()
annotate(
geom="text",
x = true_dem_wins,
y = 10,
angle = 90,
label = paste("True outcome =", true_dem_wins)
)
} else {
true_dem_wins <- numeric(0)
gg_annotation <- element_blank
}
ggplot(pred_total, aes(x = n_dem_wins, fill = n_dem_wins < 101.5)) +
geom_histogram(binwidth = 1) +
geom_vline(xintercept = true_dem_wins) %+%
gg_annotation +
ggtitle(paste("Predicted Democratic seats in", holdout_year)) +
ylab("N Bootstrap Sims") +
theme_sixtysix() +
scale_fill_manual(
values = c(`TRUE`=strong_red, `FALSE` = strong_blue),
guide = FALSE
)
}
gg_pred_hist(bs, true_line = FALSE)
geom_point
annotate()
annotate
annotate(geom="text")
gg_pred_hist <- function(bs, true_line=TRUE){
holdout_year <- bs$holdout_year
print("bootstrapped predictions")
pred_total <- bs$sample %>%
group_by(sim) %>%
summarise(n_dem_wins = sum(pred_samp > 0.5)) %>%
group_by()
print(mean(pred_total$n_dem_wins))
print(pivotal_bs(pred_total$n_dem_wins, c(0.025, 0.2, 0.8, 0.975)))
if(true_line){
print("actual results")
true_dem_wins <- df[df$year == holdout_year,] %>% with(sum(sth_pctdem > 0.5))
print(true_dem_wins)
gg_annotation <- function(geom)
annotate(
geom="text",
x = true_dem_wins,
y = 10,
angle = 90,
label = paste("True outcome =", true_dem_wins)
)
} else {
true_dem_wins <- numeric(0)
gg_annotation <- element_blank
}
ggplot(pred_total, aes(x = n_dem_wins, fill = n_dem_wins < 101.5)) +
geom_histogram(binwidth = 1) +
geom_vline(xintercept = true_dem_wins) %+%
gg_annotation() +
ggtitle(paste("Predicted Democratic seats in", holdout_year)) +
ylab("N Bootstrap Sims") +
theme_sixtysix() +
scale_fill_manual(
values = c(`TRUE`=strong_red, `FALSE` = strong_blue),
guide = FALSE
)
}
gg_pred_hist(bs, true_line = FALSE)
gg_annotation <- element_blank
gg_annotation()
element_blank()
gg_pred_hist <- function(bs, true_line=TRUE){
holdout_year <- bs$holdout_year
print("bootstrapped predictions")
pred_total <- bs$sample %>%
group_by(sim) %>%
summarise(n_dem_wins = sum(pred_samp > 0.5)) %>%
group_by()
print(mean(pred_total$n_dem_wins))
print(pivotal_bs(pred_total$n_dem_wins, c(0.025, 0.2, 0.8, 0.975)))
if(true_line){
print("actual results")
true_dem_wins <- df[df$year == holdout_year,] %>% with(sum(sth_pctdem > 0.5))
print(true_dem_wins)
gg_annotation <- function(geom)
annotate(
geom="text",
x = true_dem_wins,
y = 10,
angle = 90,
label = paste("True outcome =", true_dem_wins)
)
} else {
true_dem_wins <- numeric(0)
gg_annotation <- geom_blank
}
ggplot(pred_total, aes(x = n_dem_wins, fill = n_dem_wins < 101.5)) +
geom_histogram(binwidth = 1) +
geom_vline(xintercept = true_dem_wins) %+%
gg_annotation() +
ggtitle(paste("Predicted Democratic seats in", holdout_year)) +
ylab("N Bootstrap Sims") +
theme_sixtysix() +
scale_fill_manual(
values = c(`TRUE`=strong_red, `FALSE` = strong_blue),
guide = FALSE
)
}
gg_pred_hist(bs, true_line = FALSE)
gg_annotation <- geom_blank
gg_annotation()
ggplot(data.frame(x=1:10)) + geom_histogram()
ggplot(data.frame(x=1:10), aes(x=x)) + geom_histogram()
ggplot(data.frame(x=1:10), aes(x=x)) + geom_histogram() + geom_blank()
ggplot(data.frame(x=1:10), aes(x=x)) + geom_histogram() + gg_annotation()
gg_pred_hist <- function(bs, true_line=TRUE){
holdout_year <- bs$holdout_year
print("bootstrapped predictions")
pred_total <- bs$sample %>%
group_by(sim) %>%
summarise(n_dem_wins = sum(pred_samp > 0.5)) %>%
group_by()
print(mean(pred_total$n_dem_wins))
print(pivotal_bs(pred_total$n_dem_wins, c(0.025, 0.2, 0.8, 0.975)))
if(true_line){
print("actual results")
true_dem_wins <- df[df$year == holdout_year,] %>% with(sum(sth_pctdem > 0.5))
print(true_dem_wins)
gg_annotation <- function(geom)
annotate(
geom="text",
x = true_dem_wins,
y = 10,
angle = 90,
label = paste("True outcome =", true_dem_wins)
)
} else {
true_dem_wins <- numeric(0)
gg_annotation <- geom_blank
}
ggplot(pred_total, aes(x = n_dem_wins, fill = n_dem_wins < 101.5)) +
geom_histogram(binwidth = 1) +
geom_vline(xintercept = true_dem_wins) +
gg_annotation() +
ggtitle(paste("Predicted Democratic seats in", holdout_year)) +
ylab("N Bootstrap Sims") +
theme_sixtysix() +
scale_fill_manual(
values = c(`TRUE`=strong_red, `FALSE` = strong_blue),
guide = FALSE
)
}
gg_pred_hist(bs, true_line = FALSE)
gg_pred_hist(bs)
bs$holdout_year <- 2006
gg_pred_hist(bs)
gg_pred_hist <- function(bs, true_line=TRUE){
holdout_year <- bs$holdout_year
print("bootstrapped predictions")
pred_total <- bs$sample %>%
group_by(sim) %>%
summarise(n_dem_wins = sum(pred_samp > 0.5)) %>%
group_by()
print(mean(pred_total$n_dem_wins))
print(pivotal_bs(pred_total$n_dem_wins, c(0.025, 0.2, 0.8, 0.975)))
if(true_line){
print("actual results")
true_dem_wins <- df[df$year == holdout_year,] %>% with(sum(sth_pctdem > 0.5))
print(true_dem_wins)
gg_annotation <- function(geom)
annotate(
geom="text",
x = true_dem_wins,
y = 10,
angle = 90,
hjust = 0,
vjust = 0,
label = paste("True outcome =", true_dem_wins)
)
} else {
true_dem_wins <- numeric(0)
gg_annotation <- geom_blank
}
ggplot(pred_total, aes(x = n_dem_wins, fill = n_dem_wins < 101.5)) +
geom_histogram(binwidth = 1) +
geom_vline(xintercept = true_dem_wins) +
gg_annotation() +
ggtitle(paste("Predicted Democratic seats in", holdout_year)) +
ylab("N Bootstrap Sims") +
theme_sixtysix() +
scale_fill_manual(
values = c(`TRUE`=strong_red, `FALSE` = strong_blue),
guide = FALSE
)
}
gg_pred_hist(bs)
gg_pred_hist <- function(bs, true_line=TRUE){
holdout_year <- bs$holdout_year
print("bootstrapped predictions")
pred_total <- bs$sample %>%
group_by(sim) %>%
summarise(n_dem_wins = sum(pred_samp > 0.5)) %>%
group_by()
print(mean(pred_total$n_dem_wins))
print(pivotal_bs(pred_total$n_dem_wins, c(0.025, 0.2, 0.8, 0.975)))
if(true_line){
print("actual results")
true_dem_wins <- df[df$year == holdout_year,] %>% with(sum(sth_pctdem > 0.5))
print(true_dem_wins)
gg_annotation <- function(geom)
annotate(
geom="text",
x = true_dem_wins,
y = 10,
angle = 90,
hjust = 0,
vjust = 1.1,
label = paste("True outcome =", true_dem_wins)
)
} else {
true_dem_wins <- numeric(0)
gg_annotation <- geom_blank
}
ggplot(pred_total, aes(x = n_dem_wins, fill = n_dem_wins < 101.5)) +
geom_histogram(binwidth = 1) +
geom_vline(xintercept = true_dem_wins) +
gg_annotation() +
ggtitle(paste("Predicted Democratic seats in", holdout_year)) +
ylab("N Bootstrap Sims") +
theme_sixtysix() +
scale_fill_manual(
values = c(`TRUE`=strong_red, `FALSE` = strong_blue),
guide = FALSE
)
}
gg_pred_hist(bs)
gg_pred_hist(pred_2018)
gg_pred_hist <- function(bs, true_line=TRUE){
holdout_year <- bs$holdout_year
print("bootstrapped predictions")
pred_total <- bs$sample %>%
group_by(sim) %>%
summarise(n_dem_wins = sum(pred_samp > 0.5)) %>%
group_by()
print(mean(pred_total$n_dem_wins))
print(pivotal_bs(pred_total$n_dem_wins, c(0.025, 0.2, 0.8, 0.975)))
if(true_line){
print("actual results")
true_dem_wins <- df[df$year == holdout_year,] %>% with(sum(sth_pctdem > 0.5))
print(true_dem_wins)
gg_annotation <- function()
annotate(
geom="text",
x = true_dem_wins,
y = 10,
angle = 90,
hjust = 0,
vjust = 1.1,
label = paste("True outcome =", true_dem_wins)
)
} else {
true_dem_wins <- numeric(0)
gg_annotation <- geom_blank
}
ggplot(pred_total, aes(x = n_dem_wins, fill = n_dem_wins < 101.5)) +
geom_histogram(binwidth = 1) +
geom_vline(xintercept = true_dem_wins) +
gg_annotation() +
ggtitle(paste("Predicted Democratic seats in", holdout_year)) +
ylab("N Bootstrap Sims") +
theme_sixtysix() +
scale_fill_manual(
values = c(`TRUE`=strong_red, `FALSE` = strong_blue),
guide = FALSE
)
}
gg_pred_hist(bs)
gg_pred_hist(pred_2018)
gg_pred_hist(pred_2018)
gg_race_pred(pred_2018)
TRUE & 1 == 1
TRUE && 1 == 1
warnings()
TRUE & 1 == 1
gg_race_pred(bs_years$`2008`)
bs_years$`2008`$holdout_year
gg_race_pred <- function(bs){
holdout_year <- bs$holdout_year
true_results <- df[df$year == holdout_year,]
race_order <- bs$sample %>%
group_by(race) %>%
summarise(m = mean(pred_samp)) %>%
with(race[order(m)])
ggplot(
bs$sample %>% mutate(race = factor(race, levels = race_order)),
aes(x=race, y=pred_samp)
) +
geom_hline(yintercept=0.5, size=1, color = 'grey30')+
geom_boxplot(outlier.colour = NA, alpha = 0.5)+
geom_point(
data = true_results %>% mutate(race=factor(race, levels=race_order)),
aes(y=sth_pctdem),
color="blue"
) +
theme_sixtysix()+
theme(
panel.grid.major.x = element_blank(),
axis.text.x = element_blank()
) +
xlab("race (sorted by predicted pct dem)") +
scale_y_continuous(breaks = seq(0,1,0.25))+
ggtitle(paste("Race-by-race predictions for", holdout_year), "Blue is actual results.")
}
bs_years$`2008`$holdout_year
gg_race_pred(bs_years$`2008`)
coef_plot <- function(bs, coef_name='contested_coef'){
coef_df <- bs[[coef_name]]
ggplot(coef_df, aes(x=term, y=estimate)) +
geom_boxplot() +
theme_sixtysix() +
theme(axis.text.x = element_text(angle = 90, hjust=1, vjust=0.5)) +
ggtitle(
paste("Coefficients of", coef_name),
paste("Holdout:", bs$holdout_year)
)
}
coef_plot(bs, 'contested_coef')
coef_plot(bs, 'uncontested_coef')
RWordPress::knit2wp
knitr::knit2wp
rm(list = ls())
source("utils/util.R")
load("outputs/df.rda")
df <- df %>% group_by()
scale_color_party <- function(...){
scale_color_manual(
values = c(Dem = strong_blue, Rep = strong_red),
...
)
}
ggplot(
df %>%
group_by(year) %>%
summarise(
Dem = sum(sth_pctdem > 0.5),
Rep = sum(sth_pctdem < 0.5)
) %>%
group_by() %>%
gather(key="party", value="n_seats", Dem:Rep),
aes(x = asnum(year), y = n_seats, color = party)
) +
geom_hline(yintercept=101.5, color = "grey30") +
geom_point(size = 4) +
geom_line(aes(group = party), size = 1) +
scale_color_party(guide=FALSE) +
theme_sixtysix() +
annotate(
"text",
label = c("Dem", "Rep"),
x = 2015, y=c(86, 117),
color=c(strong_blue, strong_red),
fontface="bold"
) +
scale_x_continuous('', breaks = seq(2002,2016,2)) +
scale_y_continuous("Number of Seats won") +
ggtitle("Pennsylvania House Party Control")
contested_form <- sth_pctdem ~ 1 +
sth_pctdem_lagged +
incumbent_is_dem +
incumbent_is_running:sth_pctdem_lagged +
usc_pctdem + usc_pctdem_statewide +
uspgov_pctdem_statewide +
uspgov_pctdem_lagged +
uspgov_pctdem_statewide_lagged
uncontested_form <- sth_pctdem ~ 1 +
dem_won_lagged +
incumbent_is_running +
dem_won_lagged:incumbent_is_running +
usc_pctdem + usc_pctdem_statewide +
uspgov_pctdem_statewide +
uspgov_pctdem_lagged +
uspgov_pctdem_statewide_lagged
